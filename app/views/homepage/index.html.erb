<!DOCTYPE html>
<html>
<head>
  <title>World Economic Index</title>
</head>
<body>
  <div id="wrapper-header">
    <header>
      <div id="nav">
        <ul><li>The Cato Institute</li>
          <li>
            FEATURES: Economic Freedom Index
          </li>
          <li>
            Menu
          </li>
          <li>
            <a href="#"><img src="assets/google-share.png" id="social"></a>
            <a href="#"><img src="assets/linkedin-share.png" id="social2"></a>
            <a href="#" id="social3"><img src="assets/comments-share.png" id="social4">324 Comments</a>
          </li>
        </ul>
      </div>
      <img src="assets/currencies-header.png" id="currencies-header">
    </header>
  </div>
  <div id="wrapper-title">
    <h1>Economic Freedom Index</h1>
    <h2>An interactive graphic measures the dimensions of
      economic freedom through out the world.</h2>
    <p id="linebreak">_________________________________</p>
    <h3>Created by Katie Reed<h3>
    <h4>January 28, 2014</h4>
  </div>

  <hr></hr>

  <br><br>

    <div id="map">
      <div id="control"></div>
      <div id="container"></div>
    </div>

    <br><br>

    Lorem ipsum

      <script type="text/javascript">

      var width = 900;
      var height = width / 2;

      var zoom = d3.behavior.zoom()
      .scaleExtent([1, 8])
      .on("zoom", move);

      var color=d3.scale.linear()
          .domain([0,6,12,20])
          .range(['rgb(200,0,50)','rgb(250,100,100)','rgb(100,230,100)','rgb(0,100,0)']);

      var legend =  d3.select("#control").append('svg').attr("width", 450)
      .attr("height", 50);

      var bar = legend.selectAll("rect").data( d3.range(0,20) );
      bar
      .enter()
      .append("rect")
      .attr("width",  20)
      .attr("height", 20)
      .attr("x", function(d,i) { return 5+i*21; })
      .attr("y", 5);
      bar
      .style("fill", function(d,i) { return color(d+0.5); });

      var label = legend.selectAll("text").data( d3.range(0,10)  );
      label
      .enter()
      .append("text")
      .classed("legend", true)
      .attr("x", function(d,i) { return 47 + i*42; })
      .attr("y", 37);
      label
      .text(function(d,i) { return i+1; });

      var topo,projection,path,svg,g,cYear,cYearData,maxRank;

      var tooltip = d3.select("#container").append("div").attr("class", "tooltip hidden");

      setup(width,height);

      function setup(width,height){
        projection = d3.geo.mercator()
        .translate([0, 0])
        .scale(width / 2 / Math.PI);

        path = d3.geo.path()
        .projection(projection);

        svg = d3.select("#container").append("svg")
        .attr("width", width)
        .attr("height", height)
        .call(zoom)
        .append("g")
        .attr("transform", "translate(" + width / 2 + "," + height / 1.6 + ")");

        g = svg.append("g");
      }

      var reportData=[];

      d3.json("/world.json", function(error, world) {

        var countries = topojson.feature(world, world.objects.countries).features;
        topo = countries;
        country = g.selectAll(".country").data(topo);

        d3.json("/report.json", function(error, data) {
          reportData=data;
          var keys=Object.keys(reportData);
          cYear=keys[0];
          cYearData=reportData[cYear];
          var sel=d3.select('#control').append('select').on('change', update);
          sel.selectAll('option').data(keys).enter().append('option').text(function(d){ return d});
          maxRank=d3.max(d3.entries(cYearData), function(d) { return d.value.rank});
          draw(topo);
        });
      });

      function update() {
        cYear=this.value;
        cYearData=reportData[cYear];

        draw(topo);
        maxRank=d3.max(d3.entries(reportData[cYear]), function(d) { return d.value.rank});
      }

      function draw(topo) {
        country = g.selectAll(".country").data(topo);

        country.enter().insert("path")
        .attr("class", "country")
        .attr("d", path)
        .attr("id", function(d,i) { return d.properties.id; });

        country.style("fill", function(d, i) {
              var id=d.properties.id ;
              return (cYearData[id]!==undefined && cYearData[id].index)?color(cYearData[id].index*2):"#eee";
            });

        var offsetL = document.getElementById('container').offsetLeft+(width/2)+40;
        var offsetT =document.getElementById('container').offsetTop+(height/2)+20;

        country
        .on("mousemove", function(d,i) {
          var mouse = d3.mouse(svg.node()).map( function(d) { return parseInt(d); } );
          var text="";
          var id = d.properties.id;
          if (cYearData[id]!==undefined && cYearData[id].index!==null){
            text="<br>Index: "+cYearData[id].index+"<br>Rank: "+cYearData[id].rank+"/"+maxRank;
          }
          tooltip
          .classed("hidden", false)
          .attr("style", "left:"+(mouse[0]+offsetL)+"px;top:"+(mouse[1]+offsetT)+"px")
          .html(d.properties.name+text)
        })
        .on("mouseout",  function(d,i) {
          tooltip.classed("hidden", true)
        });

      }

      function move() {
        var t = d3.event.translate;
        var s = d3.event.scale;
        var h = height / 2;
        t[0] = Math.min(width / 2 * (s - 1), Math.max(width / 2 * (1 - s), t[0]));
        t[1] = Math.min(height / 2 * (s - 1) + h * s, Math.max(height / 2 * (1 - s) - h * s, t[1]));
        zoom.translate(t);
        g.style("stroke-width", 1 / s).attr("transform", "translate(" + t + ")scale(" + s + ")");
      }

      </script>

    </body>

</html>
