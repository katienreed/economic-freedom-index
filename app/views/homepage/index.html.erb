<!DOCTYPE html>
<html>
<head>
  <title>World Economic Index</title>
</head>
<body>
  <div id="wrapper-header">
    <header>
      <div id="nav">
        <ul><li>The Cato Institute</li>
          <li>
            FEATURES: Economic Freedom Index
          </li>
          <li>
            <a href="#sum">Executive Summary</a>
          </li>
          <li>
            <a href="#world">World Map</a>
          </li>
          <li>
            <a href="#"><img src="assets/google-share.png" id="social"></a>
            <a href="#"><img src="assets/linkedin-share.png" id="social2"></a>
            <a href="#" id="social3"><img src="assets/comments-share.png" id="social4"><font color="black"> 324 Comments</font></a>
          </li>
        </ul>
      </div>
      <img src=<%= asset_path('currencies-header.png') %> id="currencies-header">
    </header>
  </div>
  <div id="wrapper-title">
    <h1>Economic Freedom Index</h1>
    <h2>An interactive graphic measures the dimensions of
      economic freedom through out the world.</h2>
    <p id="linebreak">_________________________________</p>
    <h3>Created by Katie Reed<h3>
    <h4>January 28, 2014</h4>
  </div>

  <hr></hr>
  <div id="article">
    <a name="sum"></a>
    <div id="section">
      Executive Summary
    </div>
    <br>
    <div id="text">
      The index published in Economic Freedom of the World
      measures the degree to which the policies and institutions
      of countries are supportive of economic freedom. The cornerstones
      of economic freedom are personal choice, voluntary exchange,
      freedom to enter markets and compete, and security of the person and
      privately owned property. Forty-two data points are used to
      construct a summary index and to measure the degree of economic
      freedom in five broad areas:
    </div>
      <br><br>
      <div id="list">
        1) Size of Government: Expenditures, Taxes, and Enterprises;<br>
        2) Legal Structure and Security of Property Rights;<br>
        3) Access to Sound Money;<br>
        4) Freedom to Trade Internationally;<br>
        5) Regulation of Credit, Labor, and Business.<br>
      </div>
      <br><br>
    <div id="text">
      <i>Average chain-linked rating</i><br>
      The average chain-linked economic freedom rating for the 101 countries
      with ratings since 1980 has increased from 5.32 in 1980 to 5.78 in
      1990 to 6.72 in 2000 and finally to 6.84 in 2012.
    </div>
      <br><br>
    <div id="text">
      <i>Top Rated Countries</i><br>
      Hong Kong and Singapore, once again, occupy the top two positions.
      The other nations in the top 10 are New Zealand, Switzerland, Mauritius,
      United Arab Emirates, Canada, Australia, Jordan, and, tied for
      10th, Chile and Finland.
    </div>
    <br><br>
    <div id="step-4"></div>
    <div id="step-5"></div>
    <br><br>
    <div id="text">
      <i>Lowest Rated Countries</i><br>
      The 10 lowest-rated countries are: Myanmar, Democratic Republic of Congo,
      Burundi, Chad, Iran, Algeria, Argentina, Zimbabwe, Republic of Congo,
      and, lastly, Venezuela.
    </div>
    <br><br>
    <div id="step-6"></div>
    <div id="step-7"></div>
    <br><br>
    <a name="world"></a>
    <div id="section">
      World Map
    </div>
    <br>

  </div>
    <p>
    <div id="map">
      <div id="control"></div>
      <div id="container"></div>
    </div>

    <br><br><Br>

  <footer>
    Â© Cato Institute, Katie Reed
  </footer>

    <script type="text/javascript">

    var countries = ['Hong Kong', 'Singapore', 'New Zealand', 'Switzerland',
    'Mauritus', 'United Arab Emirates', 'Canada', 'Australia', 'Jordan',
    'Chile'],
    scores = [8.98, 8.54, 8.25, 8.19, 8.05, 8.09, 8.00, 7.87, 7.86, 7.84],
    chart,
    width = 700,
    bar_height = 40,
    height = bar_height * countries.length;

    chart = d3.select($("#step-1")[0])
    .append('svg')
    .attr('class', 'chart')
    .attr('width', width)
    .attr('height', height);

    var x, y;

    chart = d3.select($("#step-2")[0])
    .append('svg')
    .attr('class', 'chart')
    .attr('width', width)
    .attr('height', height);

    x = d3.scale.linear()
    .domain([0, d3.max(scores)])
    .range([0, width]);

    y = d3.scale.ordinal()
    .domain(countries)    // you had scores here
    .rangeBands([0, height]);

    chart.selectAll("rect")
    .data(scores)
    .enter().append("rect")
    .attr("x", 0)
    .attr("y", function(d,i) { return y(countries[i]); })
    .attr("width", x)
    .attr("height", bar_height);

    chart = d3.select($("#step-3")[0])
    .append('svg')
    .attr('class', 'chart')
    .attr('width', width)
    .attr('height', height);

    chart.selectAll("rect")
      .data(scores)
      .enter().append("rect")
      .attr("x", left_width)
      .attr("y", function(d,i) { return y(countries[i]); })
      .attr("width", x)
      .attr("height", y.rangeBand());

    chart.selectAll("text.score")
        .data(scores)
        .enter().append("text")
        .attr("x", function(d) { return x(d) + left_width; })
        .attr("y", function(d, i){ return y(countries[i]) + y.rangeBand()/2; } )

    chart.selectAll("text")
    .data(scores)
    .enter().append("text")
    .attr("x", function(d) { return x(d) + left_width; })
    .attr("y", function(d, i){ return y(countries[i]) + y.rangeBand()/2; } )
    .attr("dx", -5)
    .attr("dy", ".36em")
    .attr("text-anchor", "end")
    .text(String);

    var left_width = 150;

    chart = d3.select($("#step-4")[0])
    .append('svg')
    .attr('class', 'chart')
    .attr('width', left_width + width)
    .attr('height', height);

    chart.selectAll("rect")
      .data(scores)
      .enter().append("rect")
      .attr("x", left_width)
      .attr("y", function(d,i) { return y(countries[i]); })
      .attr("width", x)
      .attr("height", y.rangeBand());

    chart.selectAll("text.score")
    .data(scores)
    .enter().append("text")
    .attr("x", function(d) { return x(d) + left_width; })
    .attr("y", function(d, i){ return y(countries[i]) + y.rangeBand()/2; } )
    .attr("dx", -20)
    .attr("dy", ".36em")
    .attr("text-anchor", "end")
    .attr('class', 'score')
    .text(String);

    chart.selectAll("text.name")
    .data(countries)
    .enter().append("text")
    .attr("x", left_width / 2)
    .attr("y", function(d, i){ return y(countries[i]) + y.rangeBand()/2; } )
    .attr("dy", ".36em")
    .attr("text-anchor", "middle")
    .attr('class', 'name')
    .text(String);

    </script>

    <script type="text/javascript">

    var countries = ['Myanmar', 'Congo, Dem. R.', 'Burundi', 'Chad', 'Iran',
    'Algeria', 'Zimbabwe', 'Argentina', 'Congo, Rep. Of', 'Venezuela'],
    scores = [5.28, 5.24, 5.21, 5.12, 5.10, 5.09, 4.93, 4.92, 4.58, 3.89],
    chart,
    width = 400,
    bar_height = 40,
    height = bar_height * countries.length;

    chart = d3.select($("#step-1")[0])
    .append('svg')
    .attr('class', 'chart')
    .attr('width', width)
    .attr('height', height);

    var x, y;

    chart = d3.select($("#step-2")[0])
    .append('svg')
    .attr('class', 'chart')
    .attr('width', width)
    .attr('height', height);

    x = d3.scale.linear()
    .domain([0, d3.max(scores)])
    .range([0, width]);

    y = d3.scale.ordinal()
    .domain(countries)    // you had scores here
    .rangeBands([0, height]);

    chart.selectAll("rect")
    .data(scores)
    .enter().append("rect")
    .attr("x", 0)
    .attr("y", function(d,i) { return y(countries[i]); })
    .attr("width", x)
    .attr("height", bar_height);

    chart = d3.select($("#step-3")[0])
    .append('svg')
    .attr('class', 'chart')
    .attr('width', width)
    .attr('height', height);

    chart.selectAll("rect")
      .data(scores)
      .enter().append("rect")
      .attr("x", left_width)
      .attr("y", function(d,i) { return y(countries[i]); })
      .attr("width", x)
      .attr("height", y.rangeBand());

    chart.selectAll("text.score")
        .data(scores)
        .enter().append("text")
        .attr("x", function(d) { return x(d) + left_width; })
        .attr("y", function(d, i){ return y(countries[i]) + y.rangeBand()/2; } )

    chart.selectAll("text")
    .data(scores)
    .enter().append("text")
    .attr("x", function(d) { return x(d) + left_width; })
    .attr("y", function(d, i){ return y(countries[i]) + y.rangeBand()/2; } )
    .attr("dx", -5)
    .attr("dy", ".36em")
    .attr("text-anchor", "end")
    .text(String);

    var left_width = 150;

    chart = d3.select($("#step-6")[0])
    .append('svg')
    .attr('class', 'chart2')
    .attr('width', left_width + width)
    .attr('height', height);

    chart.selectAll("rect")
      .data(scores)
      .enter().append("rect")
      .attr("x", left_width)
      .attr("y", function(d,i) { return y(countries[i]); })
      .attr("width", x)
      .attr("height", y.rangeBand());

    chart.selectAll("text.score")
    .data(scores)
    .enter().append("text")
    .attr("x", function(d) { return x(d) + left_width; })
    .attr("y", function(d, i){ return y(countries[i]) + y.rangeBand()/2; } )
    .attr("dx", -20)
    .attr("dy", ".36em")
    .attr("text-anchor", "end")
    .attr('class', 'score')
    .text(String);

    chart.selectAll("text.name")
    .data(countries)
    .enter().append("text")
    .attr("x", left_width / 2)
    .attr("y", function(d, i){ return y(countries[i]) + y.rangeBand()/2; } )
    .attr("dy", ".36em")
    .attr("text-anchor", "middle")
    .attr('class', 'name')
    .text(String);

    </script>






      <script type="text/javascript">

      var width = 900;
      var height = width / 2;

      var zoom = d3.behavior.zoom()
      .scaleExtent([1, 8])
      .on("zoom", move);

      var color=d3.scale.linear()
          .domain([0,6,12,20])
          .range(['rgb(200,0,50)','rgb(250,100,100)','rgb(100,230,100)','rgb(0,100,0)']);

      var legend =  d3.select("#control").append('svg').attr("width", 450)
      .attr("height", 50);

      var bar = legend.selectAll("rect").data( d3.range(0,20) );
      bar
      .enter()
      .append("rect")
      .attr("width",  20)
      .attr("height", 20)
      .attr("x", function(d,i) { return 5+i*21; })
      .attr("y", 5);
      bar
      .style("fill", function(d,i) { return color(d+0.5); });

      var label = legend.selectAll("text").data( d3.range(0,10)  );
      label
      .enter()
      .append("text")
      .classed("legend", true)
      .attr("x", function(d,i) { return 47 + i*42; })
      .attr("y", 37);
      label
      .text(function(d,i) { return i+1; });

      var topo,projection,path,svg,g,cYear,cYearData,maxRank;

      var tooltip = d3.select("#container").append("div").attr("class", "tooltip hidden");

      setup(width,height);

      function setup(width,height){
        projection = d3.geo.mercator()
        .translate([0, 0])
        .scale(width / 2 / Math.PI);

        path = d3.geo.path()
        .projection(projection);

        svg = d3.select("#container").append("svg")
        .attr("width", width)
        .attr("height", height)
        .call(zoom)
        .append("g")
        .attr("transform", "translate(" + width / 2 + "," + height / 1.6 + ")");

        g = svg.append("g");
      }

      var reportData=[];

      d3.json("/world.json", function(error, world) {

        var countries = topojson.feature(world, world.objects.countries).features;
        topo = countries;
        country = g.selectAll(".country").data(topo);

        d3.json("/report.json", function(error, data) {
          reportData=data;
          var keys=Object.keys(reportData);
          cYear=keys[0];
          cYearData=reportData[cYear];
          var sel=d3.select('#control').append('select').on('change', update);
          sel.selectAll('option').data(keys).enter().append('option').text(function(d){ return d});
          maxRank=d3.max(d3.entries(cYearData), function(d) { return d.value.rank});
          draw(topo);
        });
      });

      function update() {
        cYear=this.value;
        cYearData=reportData[cYear];

        draw(topo);
        maxRank=d3.max(d3.entries(reportData[cYear]), function(d) { return d.value.rank});
      }

      function draw(topo) {
        country = g.selectAll(".country").data(topo);

        country.enter().insert("path")
        .attr("class", "country")
        .attr("d", path)
        .attr("id", function(d,i) { return d.properties.id; });

        country.style("fill", function(d, i) {
              var id=d.properties.id ;
              return (cYearData[id]!==undefined && cYearData[id].index)?color(cYearData[id].index*2):"#eee";
            });

        var offsetL = document.getElementById('container').offsetLeft+(width/2)+40;
        var offsetT =document.getElementById('container').offsetTop+(height/2)+20;

        country
        .on("mousemove", function(d,i) {
          var mouse = d3.mouse(svg.node()).map( function(d) { return parseInt(d); } );
          var text="";
          var id = d.properties.id;
          if (cYearData[id]!==undefined && cYearData[id].index!==null){
            text="<br>Index: "+cYearData[id].index+"<br>Rank: "+cYearData[id].rank+"/"+maxRank;
          }
          tooltip
          .classed("hidden", false)
          .attr("style", "left:"+(mouse[0]+offsetL)+"px;top:"+(mouse[1]+offsetT)+"px")
          .html(d.properties.name+text)
        })
        .on("mouseout",  function(d,i) {
          tooltip.classed("hidden", true)
        });

      }

      function move() {
        var t = d3.event.translate;
        var s = d3.event.scale;
        var h = height / 2;
        t[0] = Math.min(width / 2 * (s - 1), Math.max(width / 2 * (1 - s), t[0]));
        t[1] = Math.min(height / 2 * (s - 1) + h * s, Math.max(height / 2 * (1 - s) - h * s, t[1]));
        zoom.translate(t);
        g.style("stroke-width", 1 / s).attr("transform", "translate(" + t + ")scale(" + s + ")");
      }

      </script>

    </body>

</html>
